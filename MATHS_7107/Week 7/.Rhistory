if (proposal.theta < 0 || proposal.theta > 1) {
ifelse(i == 0,
theta.chain[i + 1] <- curr.theta,
theta.chain[i + 1] <- theta.chain[i]
)
next
}
curr.likeli <- likelihood(curr.theta, coin.flips) # computed likelihood from the current theta
proposal.likeli <- likelihood(proposal.theta, coin.flips) # computed likelihood from the proposed theta
alpha <- min(proposal.likeli/curr.likeli, 1)
# if the proposal likelihood > current likelihood, we will update theta using proposal.theta, else we may update theta in a probability using proposal.theta
# Randomly decide whether to accept our new proposal
if (runif(1) < alpha)
curr.theta <- proposal.theta
theta.chain[i + 1] <- curr.theta
}
plot(theta.chain, type = "l")
print(mean(theta.chain[10:10000]))
print(sd(theta.chain[10:10000]))
log.likelihood <- function(theta, x){
return(sum(dbinom(x, size = 1, prob = theta, log = TRUE)))
}
niters <- 10000
curr.theta <- 0.01 # This is the parameter we want to find; initialise it
theta.chain <- numeric(niters) # Initialise the vector to be created
for(i in 0:(niters - 1)) {
proposal.theta <- curr.theta + rnorm(1, mean = 0, sd = 0.05)# A random draw from the proposal density that is conditioned on the previous iteration.
if (proposal.theta < 0 || proposal.theta > 1) {
ifelse(i == 0,
theta.chain[i + 1] <- curr.theta,
theta.chain[i + 1] <- theta.chain[i]
)
next
}
curr.log.likeli <- log.likelihood(curr.theta, coin.flips) # computed log likelihood from the current theta
proposal.log.likeli <- log.likelihood(proposal.theta, coin.flips) # computed log likelihood from the proposed theta
alpha <- min(exp(proposal.log.likeli-curr.log.likeli), 1)  # This needs to be updated (hint, exp cancels out log)
# Randomly decide whether to accept our new proposal
if (runif(1) < alpha)
curr.theta <- proposal.theta
theta.chain[i + 1] <- curr.theta
}
plot(theta.chain, type = "l")
print(mean(theta.chain[10:10000]))
print(sd(theta.chain[10:10000]))
p <- 0.4
mn <- c(-1, 2)
std <- c(0.2, 1.5)
f <- function(x, mu = mn, sd = std)  p * dnorm(x, mu[1], sd[1]) + (1 - p) * dnorm(x, mu[2], sd[2])
curve(f(x), col = "red", from = -4, to = 8, n = 300, las = 1)
q <- function(x, sigma){
return(rnorm(1, mean = x, sd = sigma))
}
#' x_0 : Initial value of the Markov chain
#' n : number of iterations to compute
#' sigma : size of the sd in the proposal distribution
mc.algorithm <- function(x_0, n, sigma) {
x <- numeric(n)
x[1] <- x_0
for (i in 1:(n - 1)) {
x.prop <- q(x[i], sigma = sigma)
alpha <- min((f(x.prop)/f(x[i])),1)
if (runif(1) < alpha)
x[i + 1] <- x.prop
else
x[i + 1] <- x[i]
}
return(x)
}
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidyverse, dplyr)
data("mpg")
mpg[1,]
pacman::p_load(tidyverse, dplyr)
data("mpg")
mpg[1,]
head(mpg)
tail(mpg,6)
filter(flights, month == 1)
filter(mpg$flights, month == 1)
data(flights)
filter(flights, month == 1)
data("flights")
filter(flights, month == 1)
library("flights")
data(flights)
data("flights")
install.packages("nycflights13")
library(nycflights13)
data("flights")
filter(flights, month == 1)
View(flights)
max(flights$sched_arr_time)
min(flights$sched_arr_time)
filter(flights,sched_dep_time = 700)
filter(flights,sched_dep_time == 700)
length(filter(flights,sched_dep_time == 700))
data("flights")
filter(flights, month == 1)
filter(flights, month == 1, day==1)
knitr::opts_chunk$set(echo = TRUE)
library(nycflights13)
flights %>% filter(month == 1, day == 1)
flights %>% filter(carrier == "AA",month == 1, day == 1) %>% select(flight,dep_time,arr_time)
select(flights, contains("time"))
flights %>% select(contains("time"))
select(flights, year:day)
flights %>% mutate(delay = dep_time - sched_dep_time)
flights %>% mutate(delay = dep_time - sched_dep_time)
flights
flights %>% mutate(delay = dep_time - sched_dep_time)
colnames(flights)
```{r}
flights <- flights %>% mutate(delay = dep_time - sched_dep_time)
colnames(flights)
flights %>%
select(origin, dest, distance) %>%
arrange(distance)
flights %>%
select(origin, dest, distance) %>%
arrange(distance,desc(FALSE))
flights %>%
select(origin, dest, distance) %>%
arrange(distance,desc(TRUE))
flights %>%
select(origin, dest, distance) %>%
arrange(distance,desc(FALSE))
?arrange
flights %>%
select(origin, dest, distance) %>%
arrange(distance,desc)
flights %>%
select(origin, dest, distance) %>%
arrange(across(starts_with("distance"), desc)
flights %>%
select(origin, dest, distance) %>%
arrange(across(starts_with("distance"), desc))
flights %>%
select(origin, dest, distance) %>%
arrange(across(distance, desc))
flights %>%
select(origin, dest, distance) %>%
arrange(across(distance, desc)) %>% tail(5)
flights <- flights %>% mutate(delay = dep_time - sched_dep_time)
colnames(flights)
flights %>%
filter(carrier == "AA",month == 1, day == 1) %>%
select(flight,dep_time,arr_time) %>% tail(5)
flights %>%
filter(month == 1, day == 1) %>% tail(5)
data("flights")
filter(flights, month == 1) %>% tail(5)
filter(flights, month == 1, day==1) %>% tail(5)
flights %>%
select(origin, dest, distance) %>%
arrange(desc(distance)) %>% tail(5)
flights %>%
select(origin, dest, distance) %>%
arrange(distance) %>% tail(5)
flights %>% select(origin, dest, dep_time, distance) %>%
arrange(distance, dep_time) %>% tail(5)
flights %>% select(origin, dest, dep_time, distance) %>%
arrange(distance, dep_time) %>% head(5)
flights %>% select(carrier, sched_arr_time, arr_time, arr_delay) %>%
arrange(arr_delay)
flights %>% mutate(delay = dep_time - sched_dep_time) %>% tail(5)
colnames(flights)
flights %>% select(carrier, sched_arr_time, arr_time, arr_delay) %>%
arrange(arr_delay) %>% tail(5)
flights %>% select(carrier, sched_arr_time, arr_time, arr_delay) %>%
arrange(arr_delay) %>% tail(10)
flights %>% select(carrier, sched_arr_time, arr_time, arr_delay) %>%
arrange(arr_delay) %>% tail(100)
flights %>% select(carrier, sched_arr_time, arr_time, arr_delay) %>%
arrange(arr_delay) %>% tail(1000)
flights %>% select(carrier, sched_arr_time, arr_time, arr_delay) %>%
arrange(arr_delay) %>% head(5)
by_month <- group_by(flights,month) by_month
by_month <- group_by(flights,month)
by_month
ungroup(by_month)
by_month <- group_by(flights,month)
by_month
ungroup(flights)
ungroup(by_month)
summarise(by_month, delay = mean(dep_delay, na.rm = TRUE))
ungroup(by_month)
summarise(by_month, delay = mein(dep_delay, na.rm = TRUE))
summarise(by_month, delay = min(dep_delay, na.rm = TRUE))
summarise(by_month, delay = mean(dep_delay, na.rm = TRUE))
summarise(by_month, delay = round(mean(dep_delay, na.rm = TRUE),2))
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(day_num,delay)) + geom_point() + geom_smooth()
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(day_num,delay)) + geom_point() + geom_smooth()
by_day <- group_by(flights,year,month,day)
summarise(flights, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(day_num,delay)) + geom_point() + geom_smooth()
by_day <- group_by(flights,year,month,day)
summarise(flights.groups, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(day_num,delay)) + geom_point() + geom_smooth()
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(day_num,delay)) + geom_point() + geom_smooth()
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(day_num,delay)) + geom_point() + geom_smooth(y~x)
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(day_num,delay)) + geom_point() + geom_smooth(aes(y~x))
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(day_num,delay)) + geom_point() + geom_smooth()
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(day_num,delay)) + geom_point() + geom_smooth(loess(y~x))
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(day_num,delay)) + geom_point() + geom_smooth()
?geom_smooth
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(day_num,delay)) + geom_point() + geom_smooth(method = loess, formula = y~x)
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(y = day_num, x = delay)) + geom_point() + geom_smooth(method = loess, formula = y~x)
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(x = day_num, y = delay)) + geom_point() + geom_smooth(method = loess, formula = y~x)
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(x = day_num, y = delay)) + geom_point()
+ geom_smooth(method = loess, formula = y~x)
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(x = day_num, y = delay)) + geom_point() + geom_smooth(method = loess, formula = y~x)
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(x = day_num, y = delay)) + geom_point() +
geom_smooth(method = loess, formula = y~x)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE), num_flights = n()) %>% ggplot(aes(num_flights,delay)) + geom_point() + geom_smooth()
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE), num_flights = n()) %>%
ggplot(aes(num_flights,delay)) + geom_point() +
geom_smooth(method = loess, formula = y~x)
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(x = day_num, y = delay)) + geom_point() +
geom_smooth(method = loess, formula = y~x)
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(x = day_num, y = delay)) + geom_point() +
geom_smooth(method = loess, formula = y~x)
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(x = day_num, y = delay)) + geom_point() +
geom_smooth(method = loess, formula = y~x)
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(x = day_num, y = delay)) + geom_point() +
geom_smooth(method = loess, formula = y~x)
seq_along(delay)
seq_along(flights$delay)
delay = mean(flights$dep_delay, na.rm = TRUE)
day_num = seq_along(delay)
day_num
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(x = day_num, y = delay)) + geom_point() +
geom_smooth(method = loess, formula = y~x)
by_day
mean(flights$dep_delay, na.rm = TRUE)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE))
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>% tail()
?seq_along
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay))
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
asd
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE))
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>% ungroup()
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(x = day_num, y = delay)) + geom_point() +
geom_smooth(method = loess, formula = y~x)
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(x = day_num, y = delay)) + geom_point() +
geom_smooth(method = loess, formula = y~x)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE), num_flights = n()) %>%
ggplot(aes(num_flights,delay)) + geom_point() +
geom_smooth(method = loess, formula = y~x)
?n
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE), num_flights = n())
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(x = day_num, y = delay)) + geom_point() +
geom_smooth(method = loess, formula = y~x)
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(x = day_num, y = delay)) + geom_point() +
geom_smooth(method = loess, formula = y~x)
view(by_day)
test.df <- summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(x = day_num, y = delay)) + geom_point() +
geom_smooth(method = loess, formula = y~x)
view(test.df)
test.df <- summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay))
view(test.df)
data("mpg")
view(mpg)
mpg %>% select(year, manufacturer)
mpg %>% mutate(hwy_converted = hwy * 0.42 )
mpg
mpg %>% group_by(year, mean(cty))
r mpg %>% filter(year = 1999)
mpg %>% filter(year = 1999)
mpg %>% filter(year == 1999)
length(mpg %>% filter(year == 1999))
-41-21*1.5
21*1.5+20
-20*1.5+20
21*1.5-20
-20+(-20+41)*1.5
knitr::opts_chunk$set(echo = TRUE)
prizes_next25 = tibble(prizes_9014 = c(3,25,50))
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load("tidyverse","stringr")
pulitzer <- read_csv("pulitzer.csv")
pulitzer$change_0413 <-  str_match(pulitzer$change_0413,"-?(\\d+)")[,1]
pulitzer$change_0413 <- as.integer(pulitzer$change_0413)
head(pulitzer)
pulitzer$Circ_Avg_0413 <- (pulitzer$circ_2004 + pulitzer$circ_2013) /2
head(pulitzer)
pulitzer %>%
ggplot(aes(Circ_Avg_0413)) + geom_histogram(bins = 30) +ggtitle("Histogram of Circ_Avg_0413")
pulitzer %>%
ggplot(aes(y = Circ_Avg_0413)) + geom_boxplot() +ggtitle("Boxplot of Circ_Avg_0413")
round(c(summary(pulitzer$Circ_Avg_0413)),3)
pulitzer %>%
ggplot(aes(change_0413)) + geom_histogram(bins = 30) +ggtitle("Histogram of change_0413")
pulitzer %>%
ggplot(aes(y = change_0413)) + geom_boxplot() +ggtitle("Boxplot of change_0413")
round(c(summary(pulitzer$change_0413)),3)
pulitzer %>%
ggplot(aes(log(Circ_Avg_0413))) + geom_histogram(bins = 30) +ggtitle("Histogram of change_0413(after log-transform)")
pulitzer %>%
ggplot(aes(log(change_0413 - min(pulitzer$change_0413)+1))) + geom_histogram(bins = 30) +ggtitle("Histogram of change_0413(after log-transform)")
lm_1 <- lm(log(Circ_Avg_0413) ~ prizes_9014,data = pulitzer)
summary(lm_1)
lm_2 <- lm(change_0413 ~ prizes_9014, data = pulitzer)
summary(lm_2)
plot(lm_1, which = 1)
plot(lm_1, which = 3)
plot(lm_1, which = 2)
plot(lm_2, which = 1)
plot(lm_2, which = 3)
plot(lm_2, which = 2)
prizes_next25 = tibble(prizes_9014 = c(3,25,50))
log_Cir_Avg_next25 = as.data.frame(predict(lm_1, prizes_next25))
Circ_Avg_next25= exp(log_Cir_Avg_next25)
Circ_now = c(453869,453869,453869)
result1 = round(data.frame(prizes_next25,Circ_Avg_next25,Circ_now),3)
colnames(result1) = c("prizes_next25","Circ_Avg_next25","Circ_now")
result1
prizes_next25 = tibble(prizes_9014 = c(3,25,50))
Circ_change_next25 = as.data.frame(predict(lm_2, prizes_next25))
Circ_now = c(453869,453869,453869)
result2 = round(data.frame(prizes_next25,Circ_change_next25,Circ_now),3)
colnames(result2) = c("prizes_next25","Circ_change_next25","Circ_now")
result2
prizes_next25 = tibble(prizes_9014 = c(3,25,50))
Circ_change = as.data.frame(predict(lm_2, prizes_next25))
Circ_now = c(453869,453869,453869)
result2 = round(data.frame(prizes_next25,Circ_change,Circ_now),3)
colnames(result2) = c("prizes_next25","Circ_change","Circ_now")
result2
prizes_next25 = tibble(prizes_9014 = c(3,25,50))
log_Cir_Avg = as.data.frame(predict(lm_1, prizes_next25))
Circ_Avg= exp(log_Cir_Avg)
Circ_now = c(453869,453869,453869)
result1 = round(data.frame(prizes_next25,Circ_Avg,Circ_now),3)
colnames(result1) = c("prizes_next25","Circ_Avg","Circ_now")
result1
prizes_next25 = tibble(prizes_9014 = c(3,25,50))
log_prediction <- predict(lm_1, prizes_next25, interval = "confidence",level = 0.9)
Circ_now = c(453869,453869,453869)
result3 = round(data.frame(prizes_next25,log_prediction),3)
colnames(result3) = c("prizes_next25","fit_Circ","lwr_Circ","upr_Circ")
result3$CI = result3$upr_Circ - result3$lwr_Circ
result3
prizes_next25 = tibble(prizes_9014 = c(3,25,50))
log_Cir_Avg = as.data.frame(predict(lm_1, prizes_next25))
Circ_Avg= exp(log_Cir_Avg)
Circ_now = c(453869,453869,453869)
result1 = round(data.frame(prizes_next25,log_Cir_Avg,Circ_Avg,Circ_now),3)
colnames(result1) = c("prizes_next25","log_Cir_Avg","Circ_Avg","Circ_now")
result1
prizes_next25 = tibble(prizes_9014 = c(3,25,50))
log_prediction <- predict(lm_1, prizes_next25, interval = "confidence",level = 0.9)
Circ_now = c(453869,453869,453869)
result3 = round(data.frame(prizes_next25,exp(log_prediction)),3)
colnames(result3) = c("prizes_next25","fit_Circ","lwr_Circ","upr_Circ")
result3$CI = result3$upr_Circ - result3$lwr_Circ
result3
prizes_next25 = tibble(prizes_9014 = c(3,25,50))
log_prediction <- predict(lm_1, prizes_next25, interval = "confidence",level = 0.9)
Circ_now = c(453869,453869,453869)
result3 = round(data.frame(prizes_next25,exp(log_prediction)),Circ_now,3)
prizes_next25 = tibble(prizes_9014 = c(3,25,50))
log_prediction <- predict(lm_1, prizes_next25, interval = "confidence",level = 0.9)
Circ_now = c(453869,453869,453869)
result3 = round(data.frame(prizes_next25,Circ_now,exp(log_prediction)),3)
colnames(result3) = c("prizes_next25","fit_Circ","lwr_Circ","upr_Circ")
result3$CI = result3$upr_Circ - result3$lwr_Circ
result3
prizes_next25 = tibble(prizes_9014 = c(3,25,50))
log_prediction <- predict(lm_1, prizes_next25, interval = "confidence",level = 0.9)
Circ_now = c(453869,453869,453869)
result3 = round(data.frame(prizes_next25,Circ_now,exp(log_prediction)),3)
colnames(result3) = c("prizes_next25","Circ_now","fit_Circ_Change","lwr_Circ_Change","upr_Circ_Change")
result3$CI = result3$upr_Circ - result3$lwr_Circ
result3
prizes_next25 = tibble(prizes_9014 = c(3,25,50))
log_prediction <- predict(lm_1, prizes_next25, interval = "confidence",level = 0.9)
result3 = round(data.frame(prizes_next25,exp(log_prediction)),3)
colnames(result3) = c("prizes_next25","fit_Circ_Change","lwr_Circ_Change","upr_Circ_Change")
result3$CI = result3$upr_Circ - result3$lwr_Circ
result3
prizes_next25 = tibble(prizes_9014 = c(3,25,50))
log_prediction <- predict(lm_1, prizes_next25, interval = "confidence",level = 0.9)
result3 = round(data.frame(prizes_next25,exp(log_prediction)),3)
colnames(result3) = c("prizes_next25","fit_Change","lwr_Change","upr_Change")
result3$CI = result3$upr_Circ - result3$lwr_Circ
prizes_next25 = tibble(prizes_9014 = c(3,25,50))
log_prediction <- predict(lm_1, prizes_next25, interval = "confidence",level = 0.9)
result3 = round(data.frame(prizes_next25,exp(log_prediction)),3)
colnames(result3) = c("prizes_next25","fit_Change","lwr_Change","upr_Change")
result3$CI = result3$upr_Change - result3$lwr_Change
result3
prizes_next25 = tibble(prizes_9014 = c(3,25,50))
log_prediction <- predict(lm_1, prizes_next25, interval = "confidence",level = 0.9)
result3 = round(data.frame(prizes_next25,exp(log_prediction)),3)
colnames(result3) = c("prizes_next25","fit_Circ","lwr_Circ","upr_Circ")
result3$CI = result3$upr_Circ - result3$lwr_Circ
result3
prizes_next25 = tibble(prizes_9014 = c(3,25,50))
prediction <- predict(lm_2, prizes_next25, interval = "prediction",level = 0.9)
result4 = round(data.frame(prizes_next25,prediction),3)
colnames(result4) = c("prizes_next25","fit_Change","lwr_Change","upr_Change")
result4$PI = result4$upr_Change - result4$lwr_Change
result4
setwd("~/Desktop/Git Project/MDS/MATHS_7107/Week 7")
knitr::opts_chunk$set(echo = TRUE)
ggplot(population, aes(y = pop_growth_2015_20, x = med_age_all)) + geom_point()
population <- read.csv("population.csv")
ggplot(population, aes(y = pop_growth_2015_20, x = med_age_all)) + geom_point()
pacman::p_load("tidyverse")
population <- read.csv("population.csv")
ggplot(population, aes(y = pop_growth_2015_20, x = med_age_all)) + geom_point()
