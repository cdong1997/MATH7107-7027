arrange(arr_delay) %>% tail(1000)
flights %>% select(carrier, sched_arr_time, arr_time, arr_delay) %>%
arrange(arr_delay) %>% head(5)
by_month <- group_by(flights,month) by_month
by_month <- group_by(flights,month)
by_month
ungroup(by_month)
by_month <- group_by(flights,month)
by_month
ungroup(flights)
ungroup(by_month)
summarise(by_month, delay = mean(dep_delay, na.rm = TRUE))
ungroup(by_month)
summarise(by_month, delay = mein(dep_delay, na.rm = TRUE))
summarise(by_month, delay = min(dep_delay, na.rm = TRUE))
summarise(by_month, delay = mean(dep_delay, na.rm = TRUE))
summarise(by_month, delay = round(mean(dep_delay, na.rm = TRUE),2))
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(day_num,delay)) + geom_point() + geom_smooth()
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(day_num,delay)) + geom_point() + geom_smooth()
by_day <- group_by(flights,year,month,day)
summarise(flights, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(day_num,delay)) + geom_point() + geom_smooth()
by_day <- group_by(flights,year,month,day)
summarise(flights.groups, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(day_num,delay)) + geom_point() + geom_smooth()
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(day_num,delay)) + geom_point() + geom_smooth()
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(day_num,delay)) + geom_point() + geom_smooth(y~x)
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(day_num,delay)) + geom_point() + geom_smooth(aes(y~x))
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(day_num,delay)) + geom_point() + geom_smooth()
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(day_num,delay)) + geom_point() + geom_smooth(loess(y~x))
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(day_num,delay)) + geom_point() + geom_smooth()
?geom_smooth
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(day_num,delay)) + geom_point() + geom_smooth(method = loess, formula = y~x)
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(y = day_num, x = delay)) + geom_point() + geom_smooth(method = loess, formula = y~x)
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(x = day_num, y = delay)) + geom_point() + geom_smooth(method = loess, formula = y~x)
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(x = day_num, y = delay)) + geom_point()
+ geom_smooth(method = loess, formula = y~x)
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(x = day_num, y = delay)) + geom_point() + geom_smooth(method = loess, formula = y~x)
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(x = day_num, y = delay)) + geom_point() +
geom_smooth(method = loess, formula = y~x)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE), num_flights = n()) %>% ggplot(aes(num_flights,delay)) + geom_point() + geom_smooth()
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE), num_flights = n()) %>%
ggplot(aes(num_flights,delay)) + geom_point() +
geom_smooth(method = loess, formula = y~x)
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(x = day_num, y = delay)) + geom_point() +
geom_smooth(method = loess, formula = y~x)
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(x = day_num, y = delay)) + geom_point() +
geom_smooth(method = loess, formula = y~x)
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(x = day_num, y = delay)) + geom_point() +
geom_smooth(method = loess, formula = y~x)
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(x = day_num, y = delay)) + geom_point() +
geom_smooth(method = loess, formula = y~x)
seq_along(delay)
seq_along(flights$delay)
delay = mean(flights$dep_delay, na.rm = TRUE)
day_num = seq_along(delay)
day_num
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(x = day_num, y = delay)) + geom_point() +
geom_smooth(method = loess, formula = y~x)
by_day
mean(flights$dep_delay, na.rm = TRUE)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE))
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>% tail()
?seq_along
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay))
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
asd
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE))
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>% ungroup()
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(x = day_num, y = delay)) + geom_point() +
geom_smooth(method = loess, formula = y~x)
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(x = day_num, y = delay)) + geom_point() +
geom_smooth(method = loess, formula = y~x)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE), num_flights = n()) %>%
ggplot(aes(num_flights,delay)) + geom_point() +
geom_smooth(method = loess, formula = y~x)
?n
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE), num_flights = n())
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(x = day_num, y = delay)) + geom_point() +
geom_smooth(method = loess, formula = y~x)
by_day <- group_by(flights,year,month,day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(x = day_num, y = delay)) + geom_point() +
geom_smooth(method = loess, formula = y~x)
view(by_day)
test.df <- summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay)) %>%
ggplot(aes(x = day_num, y = delay)) + geom_point() +
geom_smooth(method = loess, formula = y~x)
view(test.df)
test.df <- summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
mutate(day_num = seq_along(delay))
view(test.df)
data("mpg")
view(mpg)
mpg %>% select(year, manufacturer)
mpg %>% mutate(hwy_converted = hwy * 0.42 )
mpg
mpg %>% group_by(year, mean(cty))
r mpg %>% filter(year = 1999)
mpg %>% filter(year = 1999)
mpg %>% filter(year == 1999)
length(mpg %>% filter(year == 1999))
-41-21*1.5
21*1.5+20
-20*1.5+20
21*1.5-20
-20+(-20+41)*1.5
knitr::opts_chunk$set(echo = TRUE)
prizes_next25 = tibble(prizes_9014 = c(3,25,50))
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load("tidyverse","stringr")
pulitzer <- read_csv("pulitzer.csv")
pulitzer$change_0413 <-  str_match(pulitzer$change_0413,"-?(\\d+)")[,1]
pulitzer$change_0413 <- as.integer(pulitzer$change_0413)
head(pulitzer)
pulitzer$Circ_Avg_0413 <- (pulitzer$circ_2004 + pulitzer$circ_2013) /2
head(pulitzer)
pulitzer %>%
ggplot(aes(Circ_Avg_0413)) + geom_histogram(bins = 30) +ggtitle("Histogram of Circ_Avg_0413")
pulitzer %>%
ggplot(aes(y = Circ_Avg_0413)) + geom_boxplot() +ggtitle("Boxplot of Circ_Avg_0413")
round(c(summary(pulitzer$Circ_Avg_0413)),3)
pulitzer %>%
ggplot(aes(change_0413)) + geom_histogram(bins = 30) +ggtitle("Histogram of change_0413")
pulitzer %>%
ggplot(aes(y = change_0413)) + geom_boxplot() +ggtitle("Boxplot of change_0413")
round(c(summary(pulitzer$change_0413)),3)
pulitzer %>%
ggplot(aes(log(Circ_Avg_0413))) + geom_histogram(bins = 30) +ggtitle("Histogram of change_0413(after log-transform)")
pulitzer %>%
ggplot(aes(log(change_0413 - min(pulitzer$change_0413)+1))) + geom_histogram(bins = 30) +ggtitle("Histogram of change_0413(after log-transform)")
lm_1 <- lm(log(Circ_Avg_0413) ~ prizes_9014,data = pulitzer)
summary(lm_1)
lm_2 <- lm(change_0413 ~ prizes_9014, data = pulitzer)
summary(lm_2)
plot(lm_1, which = 1)
plot(lm_1, which = 3)
plot(lm_1, which = 2)
plot(lm_2, which = 1)
plot(lm_2, which = 3)
plot(lm_2, which = 2)
prizes_next25 = tibble(prizes_9014 = c(3,25,50))
log_Cir_Avg_next25 = as.data.frame(predict(lm_1, prizes_next25))
Circ_Avg_next25= exp(log_Cir_Avg_next25)
Circ_now = c(453869,453869,453869)
result1 = round(data.frame(prizes_next25,Circ_Avg_next25,Circ_now),3)
colnames(result1) = c("prizes_next25","Circ_Avg_next25","Circ_now")
result1
prizes_next25 = tibble(prizes_9014 = c(3,25,50))
Circ_change_next25 = as.data.frame(predict(lm_2, prizes_next25))
Circ_now = c(453869,453869,453869)
result2 = round(data.frame(prizes_next25,Circ_change_next25,Circ_now),3)
colnames(result2) = c("prizes_next25","Circ_change_next25","Circ_now")
result2
prizes_next25 = tibble(prizes_9014 = c(3,25,50))
Circ_change = as.data.frame(predict(lm_2, prizes_next25))
Circ_now = c(453869,453869,453869)
result2 = round(data.frame(prizes_next25,Circ_change,Circ_now),3)
colnames(result2) = c("prizes_next25","Circ_change","Circ_now")
result2
prizes_next25 = tibble(prizes_9014 = c(3,25,50))
log_Cir_Avg = as.data.frame(predict(lm_1, prizes_next25))
Circ_Avg= exp(log_Cir_Avg)
Circ_now = c(453869,453869,453869)
result1 = round(data.frame(prizes_next25,Circ_Avg,Circ_now),3)
colnames(result1) = c("prizes_next25","Circ_Avg","Circ_now")
result1
prizes_next25 = tibble(prizes_9014 = c(3,25,50))
log_prediction <- predict(lm_1, prizes_next25, interval = "confidence",level = 0.9)
Circ_now = c(453869,453869,453869)
result3 = round(data.frame(prizes_next25,log_prediction),3)
colnames(result3) = c("prizes_next25","fit_Circ","lwr_Circ","upr_Circ")
result3$CI = result3$upr_Circ - result3$lwr_Circ
result3
prizes_next25 = tibble(prizes_9014 = c(3,25,50))
log_Cir_Avg = as.data.frame(predict(lm_1, prizes_next25))
Circ_Avg= exp(log_Cir_Avg)
Circ_now = c(453869,453869,453869)
result1 = round(data.frame(prizes_next25,log_Cir_Avg,Circ_Avg,Circ_now),3)
colnames(result1) = c("prizes_next25","log_Cir_Avg","Circ_Avg","Circ_now")
result1
prizes_next25 = tibble(prizes_9014 = c(3,25,50))
log_prediction <- predict(lm_1, prizes_next25, interval = "confidence",level = 0.9)
Circ_now = c(453869,453869,453869)
result3 = round(data.frame(prizes_next25,exp(log_prediction)),3)
colnames(result3) = c("prizes_next25","fit_Circ","lwr_Circ","upr_Circ")
result3$CI = result3$upr_Circ - result3$lwr_Circ
result3
prizes_next25 = tibble(prizes_9014 = c(3,25,50))
log_prediction <- predict(lm_1, prizes_next25, interval = "confidence",level = 0.9)
Circ_now = c(453869,453869,453869)
result3 = round(data.frame(prizes_next25,exp(log_prediction)),Circ_now,3)
prizes_next25 = tibble(prizes_9014 = c(3,25,50))
log_prediction <- predict(lm_1, prizes_next25, interval = "confidence",level = 0.9)
Circ_now = c(453869,453869,453869)
result3 = round(data.frame(prizes_next25,Circ_now,exp(log_prediction)),3)
colnames(result3) = c("prizes_next25","fit_Circ","lwr_Circ","upr_Circ")
result3$CI = result3$upr_Circ - result3$lwr_Circ
result3
prizes_next25 = tibble(prizes_9014 = c(3,25,50))
log_prediction <- predict(lm_1, prizes_next25, interval = "confidence",level = 0.9)
Circ_now = c(453869,453869,453869)
result3 = round(data.frame(prizes_next25,Circ_now,exp(log_prediction)),3)
colnames(result3) = c("prizes_next25","Circ_now","fit_Circ_Change","lwr_Circ_Change","upr_Circ_Change")
result3$CI = result3$upr_Circ - result3$lwr_Circ
result3
prizes_next25 = tibble(prizes_9014 = c(3,25,50))
log_prediction <- predict(lm_1, prizes_next25, interval = "confidence",level = 0.9)
result3 = round(data.frame(prizes_next25,exp(log_prediction)),3)
colnames(result3) = c("prizes_next25","fit_Circ_Change","lwr_Circ_Change","upr_Circ_Change")
result3$CI = result3$upr_Circ - result3$lwr_Circ
result3
prizes_next25 = tibble(prizes_9014 = c(3,25,50))
log_prediction <- predict(lm_1, prizes_next25, interval = "confidence",level = 0.9)
result3 = round(data.frame(prizes_next25,exp(log_prediction)),3)
colnames(result3) = c("prizes_next25","fit_Change","lwr_Change","upr_Change")
result3$CI = result3$upr_Circ - result3$lwr_Circ
prizes_next25 = tibble(prizes_9014 = c(3,25,50))
log_prediction <- predict(lm_1, prizes_next25, interval = "confidence",level = 0.9)
result3 = round(data.frame(prizes_next25,exp(log_prediction)),3)
colnames(result3) = c("prizes_next25","fit_Change","lwr_Change","upr_Change")
result3$CI = result3$upr_Change - result3$lwr_Change
result3
prizes_next25 = tibble(prizes_9014 = c(3,25,50))
log_prediction <- predict(lm_1, prizes_next25, interval = "confidence",level = 0.9)
result3 = round(data.frame(prizes_next25,exp(log_prediction)),3)
colnames(result3) = c("prizes_next25","fit_Circ","lwr_Circ","upr_Circ")
result3$CI = result3$upr_Circ - result3$lwr_Circ
result3
prizes_next25 = tibble(prizes_9014 = c(3,25,50))
prediction <- predict(lm_2, prizes_next25, interval = "prediction",level = 0.9)
result4 = round(data.frame(prizes_next25,prediction),3)
colnames(result4) = c("prizes_next25","fit_Change","lwr_Change","upr_Change")
result4$PI = result4$upr_Change - result4$lwr_Change
result4
knitr::opts_chunk$set(echo = TRUE)
data(midwest)
pacman::p_load("tidyverse")
midwest
pacman::p_load(dplyr,tidyverse,tidymodels,tidyr,stringr,lubridate,inspectdf,forcats,caret,mlbench,mplot,modelr,parsnip,yardstick,recipes,rsample)
setwd("~/Downloads")
summary(M4$fit)
# Select the insignificant vars
tidy(M4) %>%
filter(p.value>0.05) %>%
arrange(p.value)
plot(M4$fit)
pacman::p_load(dplyr,tidyverse,tidymodels,tidyr,stringr,lubridate,inspectdf,forcats,caret,mlbench,mplot,modelr,parsnip,yardstick,recipes,rsample)
setwd("~/Desktop/Git Project/MDS/MATHS_7107/Week 8")
?midwest
data("midwest")
midwest
data("midwest")
head(midwest)
head(diamonds)
head(msleep)
?msleep
data("diamonds")
head(diamonds)
diamonds %>% ggplot(aes(price)) + geom_boxplot()
data("diamonds")
head(diamonds)
diamonds %>% ggplot(aes(x= colour, y=price)) + geom_boxplot()
?diamonds
data("diamonds")
head(diamonds)
diamonds %>% ggplot(aes(x= color, y=price)) + geom_boxplot()
# 加载 tidyverse 库
library(tidyverse)
# 将 diamonds 数据集存储到一个变量中
diamonds_data <- diamonds
# 创建 side-by-side 箱型图
ggplot(diamonds_data, aes(x = color, y = price)) +
geom_boxplot() +
labs(title = "Diamond Prices by Color", x = "Color", y = "Price")
data("diamonds")
head(diamonds)
# 计算每种颜色的四分位数
quantiles_by_color <- diamonds_data %>%
group_by(color) %>%
summarize(Q1 = quantile(price, 0.25),
Q3 = quantile(price, 0.75))
# 计算每种颜色的 IQR
quantiles_by_color <- quantiles_by_color %>%
mutate(IQR = Q3 - Q1) %>%
arrange(IQR)
print(quantiles_by_color)
data("diamonds")
head(diamonds)
diamonds %>% ggplot(aes(x= weight, y=mass)) + geom_point()
data("diamonds")
head(diamonds)
diamonds %>% ggplot(aes(x= height, y=mass)) + geom_point()
data("midwest")
head(midwest)
lm1 <- lm(percollege ~ log(poptotal),data =midwest)
summary(lm1)
data("midwest")
head(midwest)
lm1 <- lm(percollege ~ log(poptotal),data =midwest)
summary(lm1)
log_poptotal_value <- log(10000)
predicted_percollege <- predict(lm1, newdata = data.frame(log_poptotal = log_poptotal_value))
data("midwest")
head(midwest)
lm1 <- lm(percollege ~ log(poptotal),data =midwest)
#summary(lm1)
log_poptotal_value <- log(10000)
predicted_percollege <- predict(lm1, newdata = data.frame(log_poptotal = log_poptotal_value))
lm1
lm1
data("midwest")
head(midwest)
lm1 <- lm(percollege ~ log(poptotal),data =midwest)
#summary(lm1)
log_poptotal_value <- log(10000)
predicted_percollege <- predict(lm1, newdata = data.frame(log(poptotal)   = log_poptotal_value))
data("midwest")
head(midwest)
lm1 <- lm(percollege ~ log(poptotal),data =midwest)
summary(lm1)
log_poptotal_value <- log(10000)
predicted_percollege <- predict(lm1, newdata = data.frame(log(poptotal)   = log_poptotal_value))
3.3278*5-17.0230
data("midwest")
head(midwest)
lm1 <- lm(percollege ~ log(poptotal),data =midwest)
summary(lm1)
log_poptotal_value <- log(10000)
predicted_percollege <- predict(lm1, newdata = data.frame(poptotal = log_poptotal_value))
round(predicted_percollege, 3)
log(10000)
log(10000)*3.3278 --17.0230
lm2 <- lm(percollege ~ log(poptotal)+state,data =midwest)
summary(lm2)
data("midwest")
head(midwest)
lm1 <- lm(percollege ~ log(poptotal),data =midwest)
summary(lm1)
lm1 <- lm(percollege ~ log(poptotal), data = midwest)
log_poptotal_value <- log(10000)
predicted_percollege <- predict(lm1, newdata = data.frame(log(poptotal) = log_poptotal_value))
3.6328 *3
5*3.6328 -18.8386 -4.5381
lm2 <- lm(percollege ~ log(poptotal)+state,data =midwest)
summary(lm2)
# 创建一个新数据点
new_data <- data.frame(log(poptotal) = log(10000), state = "OH")
lm2 <- lm(percollege ~ log(poptotal)+state,data =midwest)
summary(lm2)
# 创建一个新数据点
new_data <- data.frame(`log(poptotal)` = log(10000), state = "OH")
# 计算预测值的 95% 置信区间
predicted_ci <- predict(lm2 , newdata = new_data, interval = "confidence", level = 0.95)
lm2 <- lm(percollege ~ log(poptotal)+state,data =midwest)
summary(lm2)
# 创建一个新数据点
new_data <- data.frame(poptotal = log(10000), state = "OH")
# 计算预测值的 95% 置信区间
predicted_ci <- predict(lm2 , newdata = new_data, interval = "confidence", level = 0.95)
# 输出置信区间
predicted_ci
lm2 <- lm(percollege ~ log(poptotal)+state+state:log(poptotal),data =midwest)
summary(lm2)
lm2 <- lm(percollege ~ log(poptotal)+state,data =midwest)
summary(lm2)
# 创建一个新数据点
new_data <- data.frame(poptotal = 10000, state = "OH")
# 计算预测值的 95% 置信区间
predicted_ci <- predict(lm2 , newdata = new_data, interval = "confidence", level = 0.95)
# 输出置信区间
predicted_ci
# 拟合带有交互项的多元线性回归模型
interaction_model <- lm(percollege ~ log(poptotal) * state, data = midwest)
# 显示模型摘要
summary(interaction_model)
data("midwest")
head(midwest)
lm1 <- lm(percollege ~ log(poptotal),data =midwest)
summary(lm1)
lm1 <- lm(percollege ~ log(poptotal), data = midwest)
log_poptotal_value <- 10000
predicted_percollege <- predict(lm1, newdata = data.frame(poptotal = log_poptotal_value))
round(predicted_percollege, 3)
# 比较两个模型
model_comparison <- anova(multilinear_model, interaction_model)
lm3 <- lm(percollege ~ log(poptotal)+state+state:log(poptotal),data =midwest)
summary(lm3)
lm2 <- lm(percollege ~ log(poptotal)+state,data =midwest)
summary(lm2)
# 创建一个新数据点
new_data <- data.frame(poptotal = 10000, state = "OH")
# 计算预测值的 95% 置信区间
predicted_ci <- predict(lm2 , newdata = new_data, interval = "confidence", level = 0.95)
# 输出置信区间
predicted_ci
# 比较两个模型
model_comparison <- anova(lm3, lm2)
# 输出比较结果
model_comparison
# 创建一个新数据点
new_data_ohio <- data.frame(poptotal = log(10000), state = "OH")
predicted_ci2 <- predict(lm3 , newdata = new_data, interval = "confidence", level = 0.95)
# 计算预测值的 95%
predicted_ci2
# 创建一个新数据点
new_data_ohio <- data.frame(poptotal = 10000, state = "OH")
predicted_ci2 <- predict(lm3 , newdata = new_data, interval = "confidence", level = 0.95)
# 计算预测值的 95%
predicted_ci2
# 创建一个新数据点
new_data_ohio <- data.frame(poptotal = 10000, state = "OH")
# 创建一个新数据点
# 计算预测值的 95% 预测区间
predicted_pi <- predict(lm3, newdata = new_data_ohio, interval = "prediction", level = 0.95)
# 输出预测区间
predicted_pi
